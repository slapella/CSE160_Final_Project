# This works in as far as it will calculate the r squared value of the data assuming that
# the average data is 

# you will need to import this for this to work
from sklearn.metrics import r2_score

def calc_r_squared_value(data_dict):
    total_data_list = []
    avg_data_list = []

    # Data_dict is the equivalent of temp_dict in other code
    # Likewise data is the equivalent of temp, etc. 
    # Assuming the ave_temp_dict function is called ave_temp_calc(temp_dict)
    # Also this works for pH as well as temp since the ave_temp_calc is general
    for year in data_dict:
        data = data_dict[year]
        total_num_data = len(data)
        avg_num_dict = ave_temp_calc(data_dict)
        avg_num = avg_num_dict[year]
        avg_list = [avg_num]*total_num_data
        print(avg_list)
        for i in range(len(data)):
            total_data_list.append(float(data[i]))
        print(total_data_list)
        for i in range(len(avg_list)):
            avg_data_list.append(avg_list[i])
    
    # The idea with the next bit of this code is to take that list of the average
    # numbers i had made and make it one huge list of the overall average number 
    # for the list as a whole. This should work as our "ideal" line.
    
    total_in_avg_data_list = 0
    for num in avg_data_list:
        total_in_avg_data_list += num
    
    total_avg_num = total_in_avg_data_list/len(avg_data_list)
    
    ideal_line_list = [total_avg_num]*len(avg_data_list)
    
    r2_final_score = r2_score(total_data_list, ideal_line_list)
    
    print(r2_final_score)
    return r2_final_score
